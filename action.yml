name: 'Clever Cloud review app on PRs'
description: 'Deploy a review app on Clever Cloud when a PR is opened'

inputs:
  type:  
    description: 'Which type of app to create'
    required: true
  name:
    description: 'The name of your app'
    required: true
    default: ${{ github.event.pull_request.base.repo.name }}-PR-${{ github.event.number }}
  alias:
    description: 'The alias of your app'
    required: true
    default: ${{ github.event.pull_request.base.repo.name }}-PR-${{ github.event.number }}
  region:
    description: 'The region to deploy on'
    required: true
    default: 'par'
  organization:
    description: 'The organization to deploy on'
    required: true
    default: $ORGA_ID
  domain:
    description: 'The domain to use for the app'
    required: false
    default: ${{ github.event.pull_request.base.repo.name }}-PR-${{ github.event.number }}.cleverapps.io
  set-env:
    description: 'Set environment variables'
    type: boolean
    required: false
    default: false
runs:
  using: "composite"
  steps:
    - name: Install clever-tools
      shell: bash
      run: npm install -g clever-tools
    - name: Execute commands based on action
      run: |
        if [ "${{ github.event.action }}" = 'opened' ] || [ "${{ github.event.action }}" = 'reopened' ]; then
          clever create --type ${{ inputs.type }} ${{ inputs.name }} --alias ${{ inputs.alias }} --region ${{ inputs.region }} --org ${{ inputs.organization }}
          clever domain add ${{ inputs.domain }}
          if [ "${{ inputs.set-env }}" = 'true' ]; then
            for var in $(secrets | cut -f1 -d=)
            do
              if [[ "$var" == "CLEVER_SECRET" || "$var" == "CLEVER_TOKEN" || "$var" == "ORGA_ID" || || "$var" == "CI" "$var" == GITHUB_* || "$var" == RUNNER_* ]]; then
                continue
              fi
              clever env set $var "${!var}"
            done
            clever deploy
          fi
        elif [ "${{ github.event.action }}" = 'synchronize' ]; then
          clever link -o "$ORGA_ID" ${{ inputs.name }}
          clever deploy --force
        elif [ "${{ github.event.action }}" = 'closed' ]; then
          clever delete --alias ${{ inputs.alias }}
        fi
      shell: bash